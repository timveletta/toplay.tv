enum GameStatus {
  LOBBY
  INGAME
  COMPLETE
}

enum GameType {
  TWOROOMSONEBOOM
  GALACTICCONQUEST
  CODEBREAKERS
}

enum Color {
  RED
  ORANGE
  YELLOW
  GREEN
  TEAL
  BLUE
  PURPLE
  PINK
}

type GameState {
  status: GameStatus!
}

type Game {
  id: ID!
  code: String!
  createdAt: Int
  type: GameType!
  state: GameState!
  players: [Player]
}

type Player {
  id: ID!
  gameId: ID!
  name: String!
  color: Color
  team: Int
}

input PlayerInput {
  color: Color
  team: Int
}

type Mutation {
  createGame(gameType: GameType!): Game!
  joinGame(code: String!, name: String!): Player!
  # updateGame(id: ID!, input: GameInput!): Game!
  updatePlayer(id: ID!, gameId: ID!, input: PlayerInput!): Player!
}

type Query {
  getGame(id: ID!): Game!
  getPlayer(id: ID!, gameId: ID!): Player!
}

type Subscription {
  playerJoined(gameId: ID!): Player @aws_subscribe(mutations: ["joinGame"])
  playerUpdated(gameId: ID!): Player @aws_subscribe(mutations: ["updatePlayer"])
  # gameUpdated(gameId: ID!): Game! @aws_subscribe(mutations: ["updateGame"])
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
